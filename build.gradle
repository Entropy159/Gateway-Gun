plugins {
    id 'fabric-loom' version '1.7-SNAPSHOT'
    id 'maven-publish'

    id "me.modmuss50.mod-publish-plugin" version "0.4.5"
}

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        name 'Fabric'
        url 'https://maven.fabricmc.net/'
    }
    maven {
        name = 'JitPack'
        url = 'https://jitpack.io'
    }
    maven { url 'https://hephaestus.dev/release' }
    maven { url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' }
    maven { url 'https://maven.shedaniel.me' }
    maven { url 'https://maven.fabricmc.net/io/github/prospector/modmenu' }
    maven { url 'https://maven.terraformersmc.com/releases/' }

    // for parchment
    maven {
        url = "https://maven.parchmentmc.org"
    }

    // for sodium
    maven {
        name = "Modrinth"
        url = "https://api.modrinth.com/maven"
        content {
            includeGroup "maven.modrinth"
        }
    }

    // for cardinal components that gravity changer uses
    maven {
        name = 'Ladysnake'
        url = 'https://maven.ladysnake.org/releases'
    }

//    jcenter()
}


sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

loom {
    accessWidenerPath = file("src/main/resources/gatewaygun.accesswidener")
}

fabricApi {
    configureDataGeneration()
}

dependencies {
    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
//    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"

//    mappings loom.layered() {
//        officialMojangMappings() {
//            setNameSyntheticMembers(false)
//        }
//        parchment("org.parchmentmc.data:parchment-1.20.4:2024.04.14")
//    }

    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"

    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    modImplementation ("com.github.iPortalTeam:ImmersivePortalsMod:${immptl_version}")

    // maven local
//    modImplementation "qouteall:imm_ptl_20:3.1.2.1"
//    modImplementation "qouteall:imm_ptl_core:3.1.2.1"
//    modImplementation "qouteall:q_misc_util:3.1.2.1"

    compileOnly 'com.google.code.findbugs:jsr305:3.0.2'

    modImplementation ("software.bernie.geckolib:${geckolib_path}") {

    }

    modImplementation("me.shedaniel.cloth:cloth-config-fabric:${cloth_config_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }
    modImplementation "maven.modrinth:modmenu:${modmenu_version}"

    modLocalRuntime("com.github.qouteall:GravityChanger:v1.3.0-mc1.20.4") {
        exclude(group: "net.fabricmc.fabric-api")
        //transitive=false
    }
    modLocalRuntime "dev.onyxstudios.cardinal-components-api:cardinal-components-base:5.4.0"
    modLocalRuntime "dev.onyxstudios.cardinal-components-api:cardinal-components-entity:5.4.0"

//    modLocalRuntime("com.github.Virtuoel:Pehkui:${pehkui_version}", {
//        exclude group: "net.fabricmc.fabric-api"
//    })

//    modImplementation "maven.modrinth:sodium:mc1.20.1-0.5.2"

//    modImplementation 'maven.modrinth:iris:1.6.1+1.19.4'
//    implementation "org.anarres:jcpp:1.4.14" // for iris
//    implementation 'io.github.douira:glsl-transformer:2.0.0-pre12' // for iris
//    implementation 'org.antlr:antlr4-runtime:4.11.1' // for iris

//    api("com.github.LlamaLad7:MixinExtras:${mixin_extras_version}")
//    annotationProcessor("com.github.LlamaLad7:MixinExtras:${mixin_extras_version}")
}
processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    // Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
    it.options.release = 17
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    //withSourcesJar()
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}

afterEvaluate {
    remapJar {
        archiveFileName = "${archivesBaseName}-${project.mod_version}-mc${project.minecraft_version}-fabric.jar"
    }
}

// configure the maven publication
//publishing {
//    publications {
//        mavenJava(MavenPublication) {
//            from components.java
//        }
//    }
//
//    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
//    repositories {
//        // Add repositories to publish to here.
//        // Notice: This block does NOT have the same function as the block in the top level.
//        // The repositories here will be used for publishing your artifact, not for
//        // retrieving dependencies.
//    }
//}

//publishMods {
//    file = remapJar.archiveFile
//    changelog = file("changelog.md").text
//    type = ALPHA
//    modLoaders.add("fabric")
//
//    displayName = "v${project.mod_version}-mc${project.minecraft_version}"
//    version = "v${project.mod_version}-mc${project.minecraft_version}"
//
//    curseforge {
//        projectId = "839380"
//        accessToken = providers.environmentVariable("CURSEFORGE_TOKEN")
//        minecraftVersions.add(minecraft_version)
//
//        requires {
//            slug = "immersive-portals-mod"
//        }
//    }
//    modrinth {
//        projectId = "n1B6JCKV"
//        accessToken = providers.environmentVariable("MODRINTH_TOKEN")
//        minecraftVersions.add(minecraft_version)
//
//        requires {
//            slug = "fabric-api"
//        }
//
//        requires {
//            slug = "immersiveportals"
//        }
//
//        requires {
//            slug = "geckolib"
//        }
//    }
//    github {
//        repository = "iPortalTeam/PortalGun"
//        accessToken = providers.environmentVariable("GITHUB_TOKEN")
//        commitish = minecraft_version // the branch name is the same as minecraft version
//    }
//}